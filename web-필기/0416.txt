0416,0417

 +선택자의 종류
 -전체선택자
	*{ }
 -태그 선택자
	태그이름{}
 -아이디 선택자
	#아이디이름{}
 -클래스 선택자
	.클래스이름{}

 +복합선택자
	둘 이상의 선택자를 복합적으로 사용하는 선택자
	선택자에 포함된 요소들의 관계를 따져 태그들을 선택한다
	1.하위 선택자
	E F:E의 하위요소인 F를 선택한다

	ex)div p{}	
	div 태그요소의 자손중 모든 p 태그 요소

	#board .title{}
	id가 board인 요소중 자손중 class가 title인 모든 요소

	2.자식선택자-child
	E > F :E요소의 자식인 F 요소 전부 선택
	3. 형제 선택자
	E + F:E요소의 인접형제 F요소(E요소의 바로뒤에오는  F요소 한개)
	E ~ F:E요소의 일반형제 F요소(E요소를 뒤따르는 모든 F요소 전부)

 +속성 선택자
	요소의 속성을 이용하여 선택하는 선택자

	E[attr]:attr속성을 가지고 있는 E요소를 전부 선택한다

	E[attr="val"]:attr속성의 값이 "val"과 같은 E요소를 선택한다
	(속성의 값이 완전 일치해야함, 띄어쓰기 까지 전부)

	E[attr="val"]:arrt속성의 값이 "val"을 완전 포함하는 E요소를 선택
	(띄어쓰기로 구분해서 단어와 같은 값이면 선택됨)

	E[attr ^="val"] :attr속성의 값이 "val"로 시작하는 E요소 선택
	E[attr $="val"] :attr속성의 값이 "val"로 끝나는 E요소 선택
	E[attr *="val"] :attr속성의 값이 "val"을 부분포함하는 E요소 선택
	E[attr |="val"] :attr속성의 값이 "val"과 같거나 "val-"로 시작하는 E요소

 +가상 선택자,psudo,의사선택자
	html 문서에는 실제요소에는 존재하지 않는 대상을 선택한다
	이벤트기반 ,특정순서기반 선택자가 있다

	1.가상클래스 선택자(이벤트기반)

	:hover-onenter,onleave이벤트에 반응하여 선택
	:active-onmousedown에 반응

	:link-<a>태그의 방문전 상태
	:visited-<a>태그의 방문 후 상태

	:enable- 활성화 상태인 요소
	:disable-비활성화 상태인 요소(focus를 가질수 있는 상태인지 판단해서 선택)

	:checked:-checked상태인 요소(checkbox,radio)

	:focus-onfocus상태인 요소(focus를 가지고있는 요소)

	:empty-컨텐츠가 비어있는 요소

	2.가상클래스 선택자(순서기반)
	:root -최상위 태그,<html>태그
	
	:nth-child(n)-앞에서 n번째 요소
	:nth-last-child(n)-뒤에서 n번째 요소

	:first-child-첫번째 요소
	:last-child-마지막 요소

	:only-child-유일한 자식일때(형제요소가 없을때)
	:only-of-type-유일한 타입일때(형제요소가 있더라도 단독 타입일때)

	3.가상 요소 선택자
	
	::before-태그요소의 앞에 가상요소 추가
	::after-태그요소의 뒤에 가상요소 추가

	::first-line-요소의 첫번째 줄
	::first-letter-요소의 첫번째 글자

	

 +부정 선택자
	:not(E) -조건 S를 만족하지 않는 요소
	(s는 selector를 이용하여 작성한다)

	ex):not(ul)-ul태그가 아닌요소

 +css스타일 적용 우선순위
 -선택자 우선순위
	1.아이디 선택자
	2.클래스 속성 가상
	3.태그 선택자
	4.전체 선택자
 -스타일 적용방법에 따른 우선순위
	1.!important
	2.인라인
	3.임베디드
	4.@import
	5.<link>
	6.<link>안에 적용된 @import(이건사용하지 않음)
	7.브라우저 기본스타일


 +레이아웃 흐름 속성(요소 배치)
 -float
	요소를 배치하는 방향을 지정하는 속성
	floating의 약자
	레이아웃을 구성할때 사용되는 속성이다
	흐름 방향을 지정하는 속성값
	left-왼쪽기준으로 배치
	right-오른쪽 기준으로 배치
	none-Float하지 않음
	이미지와 텍스트를 한줄에 배치하기위해 사용되는 속성
	이미지를 이동시킬수 있도록 만들고 그자리를 텍스트가 배치될수 있도록 만든다

 -clear
	float속성을 부여한 요소는 다음에 오는 요소에세 영향을 미친다
	float요소의 옆으로 배ㅣ되려고한다

	clear속성을 부여하며  float속성을 무시하고 배치된다

	left-float:left;무시
	right:float:right;무시
	both:둘다 제거
	none:float의 영향을 허용한다

 +css박스모델
 -화면에 배치되는 태그요소를 어떻게 표현할것인지 설정하는 속성
 -width,height
 -border
 -padding,margin
 -위 다섯가지 속성이 박스 모델에 따라 표현되는 방법이 달라진다

 -display:block;
 -display:inline;
 -display:inline-block;

 +block 모델
 -영역을 설정하고 공간을 차지하는 요소
 -너비의 기본 설정이 부모 요소 크기만큼으로 되어 있다
 -컨텐츠의 크기가 블락요소보다 커지면 넘치는 부분이 발생한다
 -컨텐츠가 넘친 부분에 대한 표현방법으로 overflow 속성을 사용한다

 +종결블락
 --<h1><p><caption><dt><address><blockquote> 등등
 -종결블록요소는 다른 블록요소를 자식태그로 가질수 없다
 -인라인 요소만 컨텐츠로 포함할수 있다

 +자체 레이아웃
 -width,height 속성
	적용가능
	기본값은 auto
	width - 부모됴소의 너비만큼
	height - 내부 요소의 높이 만큼(auto)

 -margin 속성
	외부요소와의 간격을 설정하는 속성(외부여백)
	margin영역에 서로만날때 밀어내지 않고 겹쳐진다
	음수로 지정하면 컨텐츠 영역이 겹쳐진다
	width가 설정된 블록요소에 margin:0 auto;를 설정하면
	외부정렬(가운데정렬) 을할수 있다
		->부모요소의 가운데로 정렬된다


 +overflow 속성
 -블록요소 내의 내용물이 컨텐츠 영역보다 커서 넘친 부분에 대한
  표현방법을 설정하는 속성

 -visible:넘친부분 보여주기
 -hidden:넘친부분 삭제하기
 -scroll:상하,좌우 스크롤바 생성하기
 (상하 스크롤바 == 수직 스크롤바 ==hscroll)
 (좌우 스크롤바 == 수평 스크롤바 ==vscroll )
 -auto:내용물이 넘친 방향에만 스크롤 생성하기

 **overflow-x, overflow-y의 통합 속성이다

 **overflow-x:좌우 방향에 대한 넘친 부분 처리속성
 **overflow-y:상하방향에 대한 넘친 부분 처리 속성
 -컨텐츠 만큼만 영역을 차지한다
 -컨텐츠가 부모 요소의 너비를 초가하면 새 행으로 줄바꿈한다
 -border를 설정하면 border도 같이 줄바꿈이 되므로 테두리가 깨진것처럼 보인다
 -인라인 요소에 border를 설정할 때에는 반드시 화면에 적용된 상황을 확인할것
 -인라인 요소끼리는 같은 줄에 여러개 배치할수 있다

 +자체레이아웃 
 -width,height 속성
	적용되지 않는다
	내용물에 맞춰 컨텐츠 영역의 크기가 결정된다

 -margin 속성
 left,right만 적용된다
 top,bottom은 없다
 서로 만나면 겹쳐지지않고 밀어낸다

 -line-height 속성
	줄간격 속성
	텍스트가 들어갈수 있는 공간의 높이를 설정하는 속성
	인라인 요소의 높이를 결정할수 있다
	margin-top,margin-bottom 대신 활용한다

















